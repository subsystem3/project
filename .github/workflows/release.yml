  name: Release

  on:
    pull_request:
      branches: [main]
      types: [closed]

  concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

  permissions:
    contents: write
    packages: read

  jobs:
    build-pdfs:
      runs-on: ubuntu-latest
      container:
        image: texlive/texlive:latest
      steps:
        - name: Check out main branch
          uses: actions/checkout@v3.5.3
          with:
            ref: main
            fetch-depth: '0'

        - name: Generate PDFs
          run: |
            # must generate twice
            pdflatex ${{ secrets.REPORT }}.tex
            pdflatex ${{ secrets.REPORT }}.tex
            pdflatex ${{ secrets.PROPOSAL }}.tex
            pdflatex ${{ secrets.PROPOSAL }}.tex

        - name: Upload PDFs
          uses: actions/upload-artifact@v3.1.2
          with:
            name: pdfs
            path: |
              ${{ secrets.REPORT }}.pdf
              ${{ secrets.PROPOSAL }}.pdf

    build-video:
      runs-on: ubuntu-latest
      steps:
        - name: Check out main branch
          uses: actions/checkout@v3.5.3
          with:
            ref: main
            fetch-depth: '0'

        - name: Cache pip packages
          uses: actions/cache@v3.3.1
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-

        - name: Cache apt packages
          uses: actions/cache@v3.3.1
          with:
            path: /var/cache/apt/archives
            key: ${{ runner.os }}-apt-${{ hashFiles('/etc/apt/sources.list') }}
            restore-keys: |
              ${{ runner.os }}-apt-

        - name: Generate Video
          run: |
            # install dependencies
            sudo apt-get update
            sudo apt-get -y install \
              ffmpeg \
              libreoffice \
              poppler-utils \
              bc

            python3 -m pip install --upgrade pip
            python3 -m pip install \
              gTTS  \
              moviepy \
              pdf2image  \
              python-pptx

            # generate video
            python3 pptx2video.py ${{ secrets.PROJECT }}.pptx

            # get total video duration
            total_seconds=$(ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 ${{ secrets.PROJECT }}.mp4)
            hours=$(bc <<< "${total_seconds}/3600")
            minutes=$(bc <<< "(${total_seconds}%3600)/60")
            seconds=$(printf "%.0f" $(bc <<< "${total_seconds}%60"))
            humanized_duration="${hours}h ${minutes}m ${seconds}s"
            echo "duration=$humanized_duration" >> "$GITHUB_OUTPUT"

        - name: Upload Video
          uses: actions/upload-artifact@v3.1.2
          with:
            name: video
            path: ${{ secrets.PROJECT }}.mp4

    release:
      if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
      needs: [build-pdfs, build-video]
      runs-on: ubuntu-latest
      environment: production
      steps:
        - name: Check out main branch
          uses: actions/checkout@v3.5.3
          with:
            ref: ${{ github.event.pull_request.merge_commit_sha }}
            fetch-depth: '0'

        - name: Download Video Artifacts
          uses: actions/download-artifact@v3.0.2
          with:
            name: video

        - name: Upload to Vimeo via Python API
          run: |
            python3 -m pip install --upgrade pip
            pip install PyVimeo
            python3 upload_video.py
          env:
            VIMEO_CLIENT_ID: ${{ secrets.VIMEO_CLIENT_ID }}
            VIMEO_CLIENT_SECRET: ${{ secrets.VIMEO_CLIENT_SECRET }}
            VIMEO_ACCESS_TOKEN: ${{ secrets.VIMEO_ACCESS_TOKEN }}
            VIMEO_VIDEO_ID: ${{ secrets.VIMEO_VIDEO_ID }}
            VIDEO_PATH: ${{ secrets.PROJECT }}.mp4

        - name: Download PDF Artifacts
          uses: actions/download-artifact@v3.0.2
          with:
            name: pdfs

        - name: Bump version and push tag
          id: tag_version
          uses: anothrNick/github-tag-action@1.67.0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            WITH_V: true
            PRERELEASE: true

        - name: Release
          uses: softprops/action-gh-release@v0.1.15
          with:
            tag_name: ${{ steps.tag_version.outputs.new_tag }}
            files: |
              ${{ secrets.PROPOSAL }}.pdf
              ${{ secrets.REPORT }}.pdf
              ${{ secrets.PROJECT }}.mp4
            body: |
              DELIVERABLES:
                - [${{ secrets.PROPOSAL }}.pdf](${{secrets.DOWNLOAD_URI}}/${{ steps.tag_version.outputs.new_tag }}/${{ secrets.PROPOSAL }}.pdf)
                - [${{ secrets.REPORT }}.pdf](${{secrets.DOWNLOAD_URI}}/${{ steps.tag_version.outputs.new_tag }}/${{ secrets.REPORT }}.pdf)
                - [${{ secrets.PROJECT }}.mp4](${{secrets.DOWNLOAD_URI}}/${{ steps.tag_version.outputs.new_tag }}/${{ secrets.PROJECT }}.mp4)

              VIDEO DURATION: ${{ needs.build-video.outputs.duration }}
            draft: false
            prerelease: true

        - name: Logout of GitHub Container Registry
          run: docker logout ghcr.io
          if: always()
