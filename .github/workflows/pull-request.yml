name: Pull Request

on:
  pull_request:
    branches: [main, dev]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  contents: write
  packages: read
  issues: write
  pull-requests: write

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check out branch
        uses: actions/checkout@v3.5.3
        with:
          ref: dev
          fetch-depth: '0'

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: minor

  build-pdfs:
    runs-on: ubuntu-latest
    container:
      image: texlive/texlive:latest
    steps:
      - name: Check out dev branch
        uses: actions/checkout@v3.5.3
        with:
          ref: dev
          fetch-depth: '0'

      - name: Generate PDFs
        shell: bash
        run: |
          # LOOK FOR .tex ONLY IN CURRENT WORKING DIRECTORY
          for file in *.tex
          do
            # CHANGE DIRECTORY DUE TO RELATIVE PATHS IN BUILDING
            dir=$(dirname "$file")
            base=$(basename "$file")
            base_no_ext="${base%.*}"
            pushd "$dir" > /dev/null

            # DELETE OLD PDF IF IT EXISTS
            rm -f "${base_no_ext}.pdf"

            # BUILD PDF
            pdflatex -interaction=nonstopmode "$base"

            # CLEAN
            rm -f *.aux *.log *.out *.toc *.fdb_latexmk *.fls *.bbl *.run.xml

            # RETURN TO ORIGINAL DIRECTORY
            popd > /dev/null
          done

      - name: Upload PDF Artifacts to workflow run
        uses: actions/upload-artifact@v3.1.2
        with:
          name: pdfs
          path: |
            ${{ vars.REPORT }}.pdf
            ${{ vars.PROPOSAL }}.pdf

  build-video:
    environment: pull_request
    runs-on: ubuntu-latest
    steps:
      - name: Check out dev branch
        uses: actions/checkout@v3.5.3
        with:
          ref: dev
          fetch-depth: '2'

      - name: Cache pip packages
        uses: actions/cache@v3.3.1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Change ownership of apt archives
        run: sudo chown -R $(whoami) /var/cache/apt/archives

      - name: Cache apt packages
        uses: actions/cache@v3.3.1
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('/etc/apt/sources.list') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Generate Video
        shell: bash
        run: ./generate_video.sh $GITHUB_SHA_BEFORE $GITHUB_SHA_AFTER ${{ vars.PROJECT }}
        env:
          GITHUB_SHA_BEFORE: ${{ github.event.before }}
          GITHUB_SHA_AFTER: ${{ github.event.after }}

      - name: Upload to Vimeo via Python API
        run: |
          python3 -m pip install --upgrade pip
          pip install PyVimeo
          python3 upload_video.py
        env:
          VIMEO_CLIENT_ID: ${{ secrets.VIMEO_CLIENT_ID }}
          VIMEO_CLIENT_SECRET: ${{ secrets.VIMEO_CLIENT_SECRET }}
          VIMEO_ACCESS_TOKEN: ${{ secrets.VIMEO_ACCESS_TOKEN }}
          VIMEO_VIDEO_ID: ${{ secrets.VIMEO_VIDEO_ID }}
          VIDEO_PATH: ${{ vars.PROJECT }}.mp4

      - name: Upload Video Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: video
          path: ${{ vars.PROJECT }}.mp4

  comment-pr:
    needs: [build-pdfs, build-video, tag]
    environment: pull_request
    runs-on: ubuntu-latest
    steps:
    - name: Comment PR
      uses: actions/github-script@v6.4.1
      with:
        script: |
          const issue_number = context.payload.pull_request.number;
          const artifact_url = `${context.payload.repository.html_url}/actions/runs/${context.runId}`;
          const vimeo_url = `https://vimeo.com/${process.env.VIMEO_VIDEO_ID}`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Workflow Artifacts (PDFs/video): <${artifact_url}>.
            Vimeo link: <${vimeo_url}>.`
          });
      env:
        VIMEO_VIDEO_ID: ${{ secrets.VIMEO_VIDEO_ID }}
