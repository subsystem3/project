name: Test

on:
  push:
    branches: [dev]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  packages: read

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check out branch
        uses: actions/checkout@v3.5.3
        with:
          ref: dev
          fetch-depth: '0'

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch

  build-pdfs:
    runs-on: ubuntu-latest
    container:
      image: texlive/texlive:latest
    steps:
      - name: Check out dev branch
        uses: actions/checkout@v3.5.3
        with:
          ref: dev
          fetch-depth: '0'

      - name: Generate PDFs
        shell: bash
        run: |
          # LOOK FOR .tex ONLY IN CURRENT WORKING DIRECTORY
          for file in *.tex
          do
            # CHANGE DIRECTORY DUE TO RELATIVE PATHS IN BUILDING
            dir=$(dirname "$file")
            base=$(basename "$file")
            base_no_ext="${base%.*}"
            pushd "$dir" > /dev/null

            # DELETE OLD PDF IF IT EXISTS
            rm -f "${base_no_ext}.pdf"

            # BUILD PDF
            pdflatex -interaction=nonstopmode "$base"

            # CLEAN
            rm -f *.aux *.log *.out *.toc *.fdb_latexmk *.fls

            # RETURN TO ORIGINAL DIRECTORY
            popd > /dev/null
          done

      - name: Upload PDF Artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: pdfs
          path: |
            ${{ vars.REPORT }}.pdf
            ${{ vars.PROPOSAL }}.pdf

  build-video:
    environment: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out dev branch
        uses: actions/checkout@v3.5.3
        with:
          ref: dev
          fetch-depth: '2'

      - name: Cache pip packages
        uses: actions/cache@v3.3.1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Change ownership of apt archives
        run: sudo chown -R $(whoami) /var/cache/apt/archives

      - name: Cache apt packages
        uses: actions/cache@v3.3.1
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('/etc/apt/sources.list') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Generate Video
        run: |
          # check for changes in PowerPoint and assets
          pptx_changed=$(git diff --name-only $GITHUB_SHA_BEFORE $GITHUB_SHA_AFTER | grep '\.pptx$')
          assets_changed=$(git diff --name-only $GITHUB_SHA_BEFORE $GITHUB_SHA_AFTER | grep '^assets/')

          if [ -n "$pptx_changed" ] || [ -n "$assets_changed" ]; then
            # install dependencies
            sudo apt-get update
            sudo apt-get -y install \
              ffmpeg \
              libreoffice \
              poppler-utils \
              bc

            python3 -m pip install --upgrade pip
            python3 -m pip install \
              gTTS  \
              moviepy \
              pdf2image  \
              python-pptx

            # generate video
            python3 pptx2video.py ${{ vars.PROJECT }}.pptx
          fi
        env:
          GITHUB_SHA_BEFORE: ${{ github.event.before }}
          GITHUB_SHA_AFTER: ${{ github.event.after }}

      - name: Upload Video Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: video
          path: ${{ vars.PROJECT }}.mp4

      - name: Upload to Vimeo via Python API
        run: |
          python3 -m pip install --upgrade pip
          pip install PyVimeo
          python3 upload_video.py
        env:
          VIMEO_CLIENT_ID: ${{ secrets.VIMEO_CLIENT_ID }}
          VIMEO_CLIENT_SECRET: ${{ secrets.VIMEO_CLIENT_SECRET }}
          VIMEO_ACCESS_TOKEN: ${{ secrets.VIMEO_ACCESS_TOKEN }}
          VIMEO_VIDEO_ID: ${{ secrets.VIMEO_VIDEO_ID }}
          VIDEO_PATH: ${{ vars.PROJECT }}.mp4
