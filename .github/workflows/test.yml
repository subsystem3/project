name: Test

on:
  push:
    branches: [dev]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  packages: read

jobs:
  build-pdfs:
    runs-on: ubuntu-latest
    container:
      image: texlive/texlive:latest
    steps:
      - name: Check out main branch
        uses: actions/checkout@v3.5.3
        with:
          ref: main
          fetch-depth: '0'

      - name: Generate PDFs
        run: |
          # generate twice to get past title page bug
          pdflatex ${{ vars.REPORT }}.tex
          pdflatex ${{ vars.REPORT }}.tex
          pdflatex ${{ vars.PROPOSAL }}.tex
          pdflatex ${{ vars.PROPOSAL }}.tex

      - name: Upload PDF Artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: pdfs
          path: |
            ${{ vars.REPORT }}.pdf
            ${{ vars.PROPOSAL }}.pdf

  build-video:
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Check out main branch
        uses: actions/checkout@v3.5.3
        with:
          ref: main
          fetch-depth: '0'

      - name: Cache pip packages
        uses: actions/cache@v3.3.1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache apt packages
        uses: actions/cache@v3.3.1
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('/etc/apt/sources.list') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Generate Video
        run: |
          # install dependencies
          sudo apt-get update
          sudo apt-get -y install \
            ffmpeg \
            libreoffice \
            poppler-utils \
            bc

          python3 -m pip install --upgrade pip
          python3 -m pip install \
            gTTS  \
            moviepy \
            pdf2image  \
            python-pptx

          # generate video
          python3 pptx2video.py ${{ vars.PROJECT }}.pptx

      - name: Upload to Vimeo via Python API
        run: |
          python3 -m pip install --upgrade pip
          pip install PyVimeo
          python3 upload_video.py
        env:
          VIMEO_CLIENT_ID: ${{ secrets.VIMEO_CLIENT_ID }}
          VIMEO_CLIENT_SECRET: ${{ secrets.VIMEO_CLIENT_SECRET }}
          VIMEO_ACCESS_TOKEN: ${{ secrets.VIMEO_ACCESS_TOKEN }}
          VIMEO_VIDEO_ID: ${{ secrets.VIMEO_VIDEO_ID }}
          VIDEO_PATH: ${{ vars.PROJECT }}.mp4

      - name: Upload Video Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: video
          path: ${{ vars.PROJECT }}.mp4
